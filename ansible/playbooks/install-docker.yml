---
- name: Install Docker on Raspberry Pi
  hosts: raspberrypi
  become: yes
  vars:
    docker_apt_release_channel: stable
    docker_apt_arch: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'armhf' }}"
    docker_compose_version: "2.24.0"

  tasks:
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: dist
        cache_valid_time: 3600

    - name: Install required system packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - python3-pip
          - python3-setuptools
          - software-properties-common
        state: present

    - name: Create directory for Docker's GPG key
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker's official GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Get Debian version codename
      command: lsb_release -cs
      register: debian_version
      changed_when: false

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch={{ docker_apt_arch }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ debian_version.stdout }} {{ docker_apt_release_channel }}"
        state: present
        filename: docker

    - name: Update apt cache after adding Docker repository
      apt:
        update_cache: yes

    - name: Install Docker Engine
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Ensure Docker service is started and enabled
      systemd:
        name: docker
        state: started
        enabled: yes
        daemon_reload: yes

    - name: Add pi user to docker group
      user:
        name: pi
        groups: docker
        append: yes
      notify: Reset SSH connection

    - name: Install Docker SDK for Python
      pip:
        name:
          - docker
          - docker-compose
        state: present
        executable: pip3

    - name: Configure Docker daemon for log rotation
      copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "10m",
              "max-file": "3"
            },
            "storage-driver": "overlay2"
          }
        backup: yes
      notify: Restart Docker

    - name: Create docker network for containers
      docker_network:
        name: docker_network
        driver: bridge

  handlers:
    - name: Restart Docker
      systemd:
        name: docker
        state: restarted

    - name: Reset SSH connection
      meta: reset_connection